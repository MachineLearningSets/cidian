// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// loadUserDict
List loadUserDict(std::string filePath, std::string defaultTag);
RcppExport SEXP cidian_loadUserDict(SEXP filePathSEXP, SEXP defaultTagSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type filePath(filePathSEXP);
    Rcpp::traits::input_parameter< std::string >::type defaultTag(defaultTagSEXP);
    __result = Rcpp::wrap(loadUserDict(filePath, defaultTag));
    return __result;
END_RCPP
}
// loadSysDict
List loadSysDict(const std::string& filePath);
RcppExport SEXP cidian_loadSysDict(SEXP filePathSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const std::string& >::type filePath(filePathSEXP);
    __result = Rcpp::wrap(loadSysDict(filePath));
    return __result;
END_RCPP
}
// gen_sys_character
CharacterVector gen_sys_character(List input, bool disp);
RcppExport SEXP cidian_gen_sys_character(SEXP inputSEXP, SEXP dispSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type input(inputSEXP);
    Rcpp::traits::input_parameter< bool >::type disp(dispSEXP);
    __result = Rcpp::wrap(gen_sys_character(input, disp));
    return __result;
END_RCPP
}
// gen_user_character
CharacterVector gen_user_character(List input, bool disp);
RcppExport SEXP cidian_gen_user_character(SEXP inputSEXP, SEXP dispSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type input(inputSEXP);
    Rcpp::traits::input_parameter< bool >::type disp(dispSEXP);
    __result = Rcpp::wrap(gen_user_character(input, disp));
    return __result;
END_RCPP
}
// decode_scel_cpp
RawVector decode_scel_cpp(CharacterVector file, CharacterVector output, NumericVector freq, bool disp);
RcppExport SEXP cidian_decode_scel_cpp(SEXP fileSEXP, SEXP outputSEXP, SEXP freqSEXP, SEXP dispSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type file(fileSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type output(outputSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type freq(freqSEXP);
    Rcpp::traits::input_parameter< bool >::type disp(dispSEXP);
    __result = Rcpp::wrap(decode_scel_cpp(file, output, freq, disp));
    return __result;
END_RCPP
}
